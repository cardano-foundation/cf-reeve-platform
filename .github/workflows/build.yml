name: Build

on:
  push:
    branches:
      - main
      - develop
      - 'release/*'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    types: [ opened, synchronize ]
  workflow_dispatch:

env:
  PRIVATE_DOCKER_REGISTRY_URL: ${{ secrets.GITLAB_DOCKER_REGISTRY_URL }}
  PRIVATE_DOCKER_REGISTRY_USER: Deploy-Token
  PRIVATE_DOCKER_REGISTRY_PASS: ${{ secrets.GITLAB_PKG_REGISTRY_TOKEN }}
  DOCKER_PUSH: true

jobs:
  publish:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: ‚õÆ cf-gha-baseline
        uses: cardano-foundation/cf-gha-workflows/./actions/cf-gha-baseline@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRIVATE_DOCKER_REGISTRY_URL: ${{ env.PRIVATE_DOCKER_REGISTRY_URL }}
          PRIVATE_DOCKER_REGISTRY_USER: ${{ env.PRIVATE_DOCKER_REGISTRY_USER }}
          PRIVATE_DOCKER_REGISTRY_PASS: ${{ env.PRIVATE_DOCKER_REGISTRY_PASS }}
          HUB_DOCKER_COM_USER: ${{ secrets.HUB_DOCKER_COM_USER }}
          HUB_DOCKER_COM_PASS: ${{ secrets.HUB_DOCKER_COM_PASS }}
          DOCKER_REGISTRIES: "${{ secrets.DOCKER_REGISTRIES_TEST }}"

      - name: Docker Login (docker.io)
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.HUB_DOCKER_COM_USER }}
          password: ${{ secrets.HUB_DOCKER_COM_PASS }}

      - name: Filter docker registries
        env: # Or as an environment variable
          DOCKER_REGISTRIES: ${{ secrets.DOCKER_REGISTRIES_TEST }}
        run: |
          PUSH_PUBLIC="true"

          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]
          then
            PUSH_PUBLIC="false"
          fi
          FILTERED_DOCKER_REGISTRIES="" 
          for docker_registry in $DOCKER_REGISTRIES
          do
            case $docker_registry in
              ghcr.io*|docker.io*) IS_PUBLIC_REPO="true";;
              hub.docker.com) IS_PUBLIC_REPO="true"; docker_registry="docker.io/cardanofoundation";;
              *) IS_PUBLIC_REPO="false";;
            esac
            if [[ "$IS_PUBLIC_REPO" = "true" && "$PUSH_PUBLIC" = "false" ]]
            then
              continue
            fi
            FILTERED_DOCKER_REGISTRIES="$FILTERED_DOCKER_REGISTRIES $docker_registry"
          done
          echo "FILTERED_DOCKER_REGISTRIES=${FILTERED_DOCKER_REGISTRIES}" | tee -a "$GITHUB_ENV"

      - name:  üåç earthly (docker build and push)
        run: |
          earthly +docker-publish \
            --PUSH=${DOCKER_PUSH} \
            --DOCKER_REGISTRIES="${{ env.FILTERED_DOCKER_REGISTRIES }}" \
            --DOCKER_IMAGES_EXTRA_TAGS="${EARTHLY_DOCKER_IMAGES_EXTRA_TAGS}"
      - name: Generate SBOM
        run: ./gradlew cyclonedxBom
      - name: Upload SBOM to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: build/reports/bom.xml
